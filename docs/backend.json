{
  "entities": {
    "Property": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Property",
      "type": "object",
      "description": "Represents a rental property with detailed information.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Auto-generated unique identifier for the property."
        },
        "name": {
          "type": "string",
          "description": "Identifying title, like “Shop 2”, “Flat A-3”."
        },
        "type": {
          "type": "string",
          "description": "Type of unit.",
          "enum": ["shop", "flat", "land", "office"]
        },
        "category": {
            "type": "string",
            "description": "Residential, Commercial, or Agricultural",
            "enum": ["residential", "commercial", "agricultural"]
        },
        "areaSize": {
            "type": "string",
            "description": "Example: '450 sq ft', '1 kanal'"
        },
        "address": {
          "type": "string",
          "description": "Complete postal address."
        },
        "landmark": {
          "type": "string",
          "description": "Helps locate it (e.g., near main bus stand)."
        },
        "pinCode": {
          "type": "string",
          "description": "For local mapping & search."
        },
        "rentAmount": {
          "type": "number",
          "description": "Standard rent set for this property."
        },
        "depositAmount": {
          "type": "number",
          "description": "Security deposit."
        },
        "maintenanceCharge": {
          "type": "number",
          "description": "Optional, per month."
        },
        "rentDueDate": {
          "type": "string",
          "format": "date",
          "description": "Rent due day each month."
        },
        "currentTenantId": {
          "type": "string",
          "description": "Link to tenants collection."
        },
        "occupancyStatus": {
          "type": "string",
          "description": "Occupancy status.",
          "enum": ["vacant", "occupied", "reserved"]
        },
        "availabilityDate": {
          "type": "string",
          "format": "date",
          "description": "When next available."
        },
        "notes": {
          "type": "string",
          "description": "Extra remarks (e.g., 'needs repaint before next tenant')."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp of creation.",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "description": "Timestamp of last update.",
          "format": "date-time"
        }
      },
      "required": ["id", "name", "type", "category", "address", "rentAmount", "occupancyStatus", "createdAt", "updatedAt"]
    },
    "Tenant": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Tenant",
      "type": "object",
      "description": "Represents a tenant, now with more detailed information.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Auto-generated unique identifier for the tenant."
        },
        "name": {
          "type": "string",
          "description": "Tenant's full name."
        },
        "phone": {
          "type": "string",
          "description": "Used for WhatsApp sharing (with country code)."
        },
        "email": {
          "type": "string",
          "description": "Optional; for future email receipts.",
          "format": "email"
        },
        "propertyName": {
          "type": "string",
          "description": "Shop, flat, or house name/number."
        },
        "propertyAddress": {
          "type": "string",
          "description": "Full address of the rented unit."
        },
        "rentAmount": {
          "type": "number",
          "description": "Monthly rent amount."
        },
        "depositAmount": {
          "type": "number",
          "description": "Security deposit (optional)."
        },
        "dueDate": {
          "type": "string",
          "description": "Rent due day each month.",
          "format": "date"
        },
        "netTerms": {
          "type": "number",
          "description": "Payment grace period in days (e.g., 5 for Net 5)."
        },
        "paymentMethod": {
          "type": "string",
          "description": "Cash, Bank, UPI, etc.",
          "enum": [
            "cash",
            "bank",
            "upi",
            "other"
          ]
        },
        "paymentStatus": {
          "type": "string",
          "description": "Payment status.",
          "enum": [
            "due",
            "paid",
            "partial",
            "overdue"
          ]
        },
        "lastReceiptUrl": {
          "type": "string",
          "description": "PDF link to Firebase Storage."
        },
        "lastPaymentDate": {
          "type": "string",
          "description": "Actual payment date.",
          "format": "date-time"
        },
        "notes": {
          "type": "string",
          "description": "Free text or remarks."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp of creation.",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "description": "Timestamp of last update.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "name",
        "propertyName",
        "propertyAddress",
        "rentAmount",
        "dueDate",
        "paymentMethod",
        "paymentStatus",
        "createdAt",
        "updatedAt"
      ]
    },
    "Transaction": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Transaction",
      "type": "object",
      "description": "Represents a single financial transaction, either income or expense.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Auto-generated unique identifier for the transaction."
        },
        "title": {
          "type": "string",
          "description": "A brief title for the transaction, e.g., 'January Rent'."
        },
        "amount": {
          "type": "number",
          "description": "The monetary value of the transaction."
        },
        "type": {
          "type": "string",
          "description": "The type of transaction.",
          "enum": ["income", "expense"]
        },
        "category": {
          "type": "string",
          "description": "The category of the transaction.",
          "enum": ["Rent Received", "Utilities", "Maintenance", "Salary", "Groceries", "Other"]
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time the transaction occurred."
        },
        "receiptUrl": {
          "type": "string",
          "description": "Optional URL to a scanned receipt image in storage."
        },
        "notes": {
          "type": "string",
          "description": "Additional notes about the transaction."
        },
        "tenantId": {
          "type": "string",
          "description": "Optional link to the tenant if it's a rent payment."
        },
        "propertyId": {
            "type": "string",
            "description": "Optional link to the property related to the transaction."
        }
      },
      "required": ["id", "title", "amount", "type", "category", "date"]
    }
  },
  "auth": {
    "providers": [
      "anonymous",
      "password"
    ]
  },
  "firestore": {
    "firestore.rules": "rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n\n    function isAuthenticated() {\n      return request.auth != null;\n    }\n\n    // Rules for 'properties' collection\n    match /properties/{propertyId} {\n      allow get, write: if isAuthenticated();\n    }\n    match /properties/{path=**} {\n      allow list: if isAuthenticated();\n    }\n\n    // Rules for 'tenants' collection\n    match /tenants/{tenantId} {\n      allow get, write: if isAuthenticated();\n    }\n    match /tenants/{path=**} {\n      allow list: if isAuthenticated();\n    }\n\n    // Rules for 'transactions' collection\n    match /transactions/{transactionId} {\n      allow get, write: if isAuthenticated();\n    }\n    match /transactions/{path=**} {\n      allow list: if isAuthenticated();\n    }\n  }\n}",
    "/properties/{propertyId}": {
      "schema": {
        "$ref": "#/entities/Property"
      },
      "description": "Stores all property information."
    },
    "/tenants/{tenantId}": {
      "schema": {
        "$ref": "#/entities/Tenant"
      },
      "description": "Stores all tenant information."
    },
    "/transactions/{transactionId}": {
        "schema": {
            "$ref": "#/entities/Transaction"
        },
        "description": "Stores all financial transactions (income and expenses)."
    }
  }
}
